{"version":3,"sources":["app/app.js","app/controllers/login-controller.js","app/controllers/question-controller.js","app/controllers/test-controller.js","app/services/login-service.js","app/services/question-service.js","modules/fastclick/fastclick.js","modules/user/user.js"],"names":[],"mappings":"AAAA,QAAA,OAAA,aACE,QACA,wBACA,uBAEF,KAAK,iBAAA,SAAA,GACH,EAAA,MAAA,WAGE,OAAA,SAAA,OAAA,QAAA,QAAA,UACE,QAAA,QAAA,SAAA,0BAAA,GAEF,OAAA,WAEE,UAAA,oBAIN,QAAQ,iBAAA,qBAAA,SAAA,EAAA,GAMN,EAEA,MAAA,OACE,IAAA,OACA,YAAA,EACA,YAAA,wBAEF,MAAA,YACE,IAAA,QACA,OACE,YACE,YAAA,0BACA,WAAA,gBAIN,MAAA,gBACE,IAAA,YACA,OACE,YACE,YAAA,0BACA,WAAA,mBAKN,EAAA,UAAA,gBAIF,QAAA,OAAA,4BACA,QAAA,OAAA,yBCvDA,QAAA,OAAA,yBACI,WAAA,aAAyB,SAAA,eAAA,SAAA,EAAA,GAErB,EAAA,OAAA,SAAA,EAAA,GACI,GAAA,IACI,MAAA,EACA,SAAA,EAGJ,GAAA,WAAA,OCTZ,QAAA,OAAA,yBACI,WAAA,gBAA4B,SAAA,eCDhC,QAAA,OAAA,yBACA,WAAA,cAA0B,SAAA,SAAA,SAAA,EAAA,GAExB,EAAA,OAAA,SAAA,GACE,QAAA,IAAA,UAAA,GACA,EAAA,GAAA,oBCLJ,QAAA,OAAA,sBACI,QAAA,gBAAyB,QAAA,SAAA,SAAA,EAAA,GACrB,OACI,WAAA,SAAA,GACI,MAAA,GAAA,KAAA,iBAAA,GACI,QAAA,WACI,EAAA,GAAA,kBAEJ,MAAA,WACI,QAAA,IAAA,mBCTxB,QAAA,OAAA,sBACA,QAAA,mBAA4B,QAAA,SAAA,GAC1B,OACE,gBAAA,WACE,MAAA,GAAA,IAAA,iBAEF,aAAA,SAAA,GACC,MAAA,GAAA,KAAA,eAAA,QCNL,QAAA,OAAA,gBACA,OAAA,WACE,OAAA,WACA,UAAA,OAAA,SAAA,QCJF,QAAA,OAAA,WACA,QAAA,QAAiB,QAAA,SAAA,GACf,GAAA,GAAA,WACA,EAAA,WAEA,EAAA,EAAA,IAAA,EAAA,SAEA,QACE,OAAA,SAAA,GACE,GAAA,GAAA,CACA,OAAA,GAAA,KAAA,EAAA,IAEF,KAAA,SAAA,GACE,GAAA,GAAA,CAEA,OADA,KAAA,GAAA,IAAA,GACA,EAAA,IAAA,IAEF,OAAA,SAAA,GACE,GAAA,GAAA,EAAA,IAAA,EAAA,EACA,OAAA,GAAA,IAAA,EAAA,IAEF,SAAA,SAAA,GACE,GAAA,GAAA,EAAA,IAAA,CACA,OAAA,GAAA,OAAA,IAEF,MAAA,SAAA,EAAA,GACE,GAAA,GAAA,EAAA,QACA,OAAA,GAAA,KAAA,GACE,MAAA,EACA,SAAA,KAGJ,OAAA,WACE,GAAA,GAAA,EAAA,SACA,OAAA,GAAA,KAAA,IAEF,MAAA,EAAA,KAAA,SAAA,GACE,MAAA,GAAA,QAEF,aAAA,EAAA,KAAA,SAAA,GACE,MAAA,GAAA","file":"app-0.0.0.min.js","sourcesContent":["angular.module('dgmSurvey', [\n  'ionic',\n  'dgmSurvey.controllers',\n  'dgmSurvey.services'\n])\n.run(function ($ionicPlatform) {\n  $ionicPlatform.ready(function () {\n    // Hide the accessory bar by default (remove this to show the accessory bar\n    // above the keyboard for form inputs)\n    if (window.cordova && window.cordova.plugins.Keyboard) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n    if (window.StatusBar) {\n      // org.apache.cordova.statusbar required\n      StatusBar.styleDefault();\n    }\n  });\n})\n.config(function ($stateProvider, $urlRouterProvider) {\n\n  // Ionic uses AngularUI Router which uses the concept of states\n  // Learn more here: https://github.com/angular-ui/ui-router\n  // Set up the various states which the app can be in.\n  // Each state's controller can be found in controllers.js\n  $stateProvider\n  // setup an abstract state for the tabs directive\n  .state('tab', {\n    url: '/tab',\n    abstract: true,\n    templateUrl: 'templates/tabs.html'\n  })\n  .state('tab.test', {\n    url: '/test',\n    views: {\n      'tab-test': {\n        templateUrl: 'templates/tab-test.html',\n        controller: 'loginCtrl'\n      }\n    }\n  })\n  .state('tab.question', {\n    url: '/question',\n    views: {\n      'tab-test': {\n        templateUrl: 'templates/question.html',\n        controller: 'QuestionCtrl'\n      }\n    }\n  });\n  // if none of the above states are matched, use this as the fallback\n  $urlRouterProvider.otherwise('/tab/test');\n\n});\n\nangular.module('dgmSurvey.controllers', []);\nangular.module('dgmSurvey.services', []);\n","angular.module('dgmSurvey.controllers')\n    .controller('loginCtrl', function ($scope, loginService) {\n\n        $scope.signIn = function (id, pass) {\n            var data = {\n                \"email\": id,\n                \"password\": pass\n            };\n\n            loginService.loginAdmin(data);\n\n        }\n    });","angular.module('dgmSurvey.controllers')\n    .controller('QuestionCtrl', function ($scope) {\n\n        //  $scope.testData = [\n        //    { text: \"Very Valueable\" },\n        //    { text: \"Somewhat Valuable\"},\n        //    { text: \"Not Very Valuable\"},\n        //    { text: \"Not Valuable at All\"}\n        //  ];\n    });","angular.module('dgmSurvey.controllers')\n.controller('SignInCtrl', function($scope, $state) {\n\n  $scope.signIn = function(user) {\n    console.log('Sign-In', user);\n    $state.go('tab.question');\n  };\n\n});\n","angular.module('dgmSurvey.services')\n    .factory('loginService', function ($http, $state) {\n        return {\n            loginAdmin: function (data) {\n                return $http.post('/v1/auth/login', data)\n                    .success(function (data) {\n                        $state.go('tab.question');\n                    })\n                    .error(function () {\n                        console.log(loginAdmin);\n                    });\n            }\n        };\n    });","angular.module('dgmSurvey.services')\n.factory('questionService', function ($http) {\n  return {\n    getAllQuestions: function () {\n      return $http.get('/v1/question');\n    },\n    postQuestion: function (question) {\n     return $http.post('/v1/question', question);   \n  }\n  };\n});","/* global angular, FastClick */\nangular.module('fastclick', [])\n.config(function () {\n  if (!window.FastClick) { return; }\n  FastClick.attach(document.body);\n});\n","angular.module('user', [])\n.factory('user', function ($http) {\n  var baseUser = '/v1/user';\n  var baseAuth = '/v1/auth';\n\n  var roleData = $http.get(baseAuth + '/roles');\n\n  return {\n    create: function (data) {\n      var url = baseUser;\n      return $http.post(url, data);\n    },\n    read: function (id) {\n      var url = baseUser;\n      if (id) { url += '/' + id; }\n      return $http.get(url);\n    },\n    update: function (user) {\n      var url = baseUser + '/' + user.id;\n      return $http.put(url, user);\n    },\n    delete: function (id) {\n      var url = baseUser + '/' + id;\n      return $http.delete(url);\n    },\n    login: function (email, password) {\n      var url = baseAuth + '/login';\n      return $http.post(url, {\n        email: email,\n        password: password\n      });\n    },\n    logout: function () {\n      var url = baseAuth + '/logout';\n      return $http.post(url);\n    },\n    roles: roleData.then(function (data) {\n      return data.roles;\n    }),\n    accessLevels: roleData.then(function (data) {\n      return data.accessLevels;\n    })\n  };\n});\n"],"sourceRoot":"/source/"}