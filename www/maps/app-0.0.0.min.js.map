{"version":3,"sources":["app/app.js","modules/loading.js","app/controllers/admin-dashboard-controller.js","app/controllers/admin-reports.js","app/controllers/login-controller.js","app/controllers/question-controller.js","app/services/login-service.js","app/services/question-service.js","modules/fastclick/fastclick.js","modules/user/user.js","modules/d3/d3.js"],"names":[],"mappings":"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","file":"app-0.0.0.min.js","sourcesContent":["angular.module('dgmSurvey', [\n  'ionic',\n  'd3',\n  'loading',\n  'dgmSurvey.controllers',\n  'dgmSurvey.services'\n])\n    .run(function ($ionicPlatform) {\n        $ionicPlatform.ready(function () {\n            // Hide the accessory bar by default (remove this to show the accessory bar\n            // above the keyboard for form inputs)\n            if (window.cordova && window.cordova.plugins.Keyboard) {\n                cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n            }\n            if (window.StatusBar) {\n                // org.apache.cordova.statusbar required\n                StatusBar.styleDefault();\n            }\n        });\n    })\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        // Ionic uses AngularUI Router which uses the concept of states\n        // Learn more here: https://github.com/angular-ui/ui-router\n        // Set up the various states which the app can be in.\n        // Each state's controller can be found in controllers.js\n        $stateProvider\n        // setup an abstract state for the tabs directive\n        .state('tab', {\n            url: '/tab',\n            abstract: true,\n            templateUrl: 'templates/tabs.html'\n        })\n            .state('tab.adminLogin', {\n                url: '/adminLogin',\n                views: {\n                    'tab-admin': {\n                        templateUrl: 'templates/tab-admin-login.html',\n                        controller: 'loginCtrl'\n                    }\n                }\n            })\n            .state('tab.adminDashboard', {\n                url: '/adminDash',\n                views: {\n                    'tab-admin': {\n                        templateUrl: 'templates/admin-dashboard.html',\n                        controller: 'adminDashCtrl'\n                    }\n                }\n            })\n            .state('tab.adminReports', {\n                url: '/adminReports',\n                views: {\n                    'tab-admin': {\n                       templateUrl: 'templates/admin-reports.html',\n                       controller: 'adminReportsCtrl'\n                    }\n                }\n            })\n            .state('tab.adminViewQuestion', {\n                url: '/adminViewQuestion',\n                views: {\n                    'tab-admin': {\n                        templateUrl: 'templates/admin-view-question.html',\n                        controller: 'QuestionCtrl'\n                    }\n                }\n            })\n            .state('tab.question', {\n                url: '/question',\n                views: {\n                    'tab-admin': {\n                        templateUrl: 'templates/question.html',\n                        controller: 'QuestionCtrl'\n                    }\n                }\n            });\n        // if none of the above states are matched, use this as the fallback\n        $urlRouterProvider.otherwise('/tab/adminLogin');\n\n    });\n\nangular.module('dgmSurvey.controllers', []);\nangular.module('dgmSurvey.services', []);\n","angular.module('loading', ['ionic'])\n.factory('loading', function ($ionicLoading) {\n  return {\n    load: function (template) {\n      template = template || 'Loading...';\n      $ionicLoading.show({template: template});\n    },\n    unload: function () {\n      $ionicLoading.hide();\n    }\n  };\n});\n","angular.module('dgmSurvey.controllers')\n    .controller('adminDashCtrl', function ($scope, $state) {\n\n        $scope.goCreate = function () {\n            $state.go('tab.question');\n        };\n        $scope.goView = function () {\n            $state.go('tab.adminViewQuestion');\n        };\n        $scope.goViewReports = function () {\n            $state.go('tab.adminReports');\n        };\n    });\n","angular.module('dgmSurvey.controllers')\n.controller('adminReportsCtrl', function ($scope, questionService, loading) {\n\n  // Get all the questions\n  loading.load();\n  questionService.getAllQuestions().then(function (res) {\n    $scope.questions = res.data.questions;\n  }).finally(loading.unload);\n\n\n  $scope.getAnswerData = function (index) {\n    var qid = $scope.questions[index]._id;\n    questionService.getQuestionAnswers(qid).then(function (res) {\n      $scope.questions[index].answerData = transformAnswers(res.data.answers);\n      $scope.questions[index].answers = res.data.answers;\n      $scope.questions[index].gotData = true;\n    });\n  };\n\n\n  function transformAnswers(answers) {\n    var finalAnswers = {};\n\n    var incrementValue = function (value) {\n      finalAnswers[value] = (finalAnswers[value] || 0) + 1;\n    };\n\n    angular.forEach(answers, function (answer) {\n      var value = answer.value;\n      if (isArray(value)) {\n        angular.forEach(value, incrementValue);\n      } else {\n        incrementValue(value);\n      }\n    });\n\n    var returnValues = [];\n\n    angular.forEach(finalAnswers, function (value, label) {\n      returnValues.push({label: label, value: value});\n    });\n\n    return returnValues;\n  }\n\n  function isArray(obj) {\n    return typeof obj === 'object' && obj.length != null;\n  }\n\n});\n","angular.module('dgmSurvey.controllers')\n    .controller('loginCtrl', function ($scope, loginService) {\n\n        $scope.signIn = function (id, pass) {\n            var data = {\n                \"email\": id,\n                \"password\": pass\n            };\n\n            loginService.loginAdmin(data);\n\n        }\n    });\n","angular.module('dgmSurvey.controllers')\n    .controller('QuestionCtrl', function ($scope, questionService, $log) {\n        $scope.question = {\n            choices: []\n        };\n\n        var questionTypePromise = questionService.getQuestionTypes();\n        questionTypePromise.then(\n            function (payload) {\n                $scope.questionTypes = payload.data.types;\n            },\n            function (errorPayload) {\n                $log.error('failed to load question types', errorPayload);\n            });\n        $scope.addQuestion = function (question) {\n            //            console.log(arguments);\n            //            var questionData = {\n            //                \"label\": \"New Label\",\n            //                \"question\": question,\n            //                \"type\": type,\n            //                \"choices\": [{\n            //                    \"label\": choices,\n            //                    \"key\": \"answerKey\"\n            //                }]\n            //            }\n            //            console.log(questionData);\n            console.log(question);\n            questionService.postQuestion(question);\n        };\n        $scope.addAnswer = function () {\n            $scope.question.choices.push('');\n        };\n        var questionPromise = questionService.getAllQuestions();\n        questionPromise.then(\n            function (payload) {\n                $scope.questionViews = payload.data.questions;\n                console.log($scope.questionViews);\n            },\n            function (errorPayload) {\n                $log.error('failed to load questions', errorPayload);\n            });\n\n        $scope.deleteQuestion = function (id) {\n            questionService.deleteAQuestionMethod(id);\n        };\n\n    });\n","angular.module('dgmSurvey.services')\n    .factory('loginService', function ($http, $state) {\n        return {\n            loginAdmin: function (data) {\n                return $http.post('/v1/auth/login', data)\n                    .success(function (data, headers) {\n                        if (data.success === true) {\n                            $state.go('tab.adminDashboard');\n                            console.log(data);\n                            console.log(headers);\n                        } else {\n                            console.log(data.error);\n                        }\n                    })\n                    .error(function (data, headers) {\n                        if (data.success === false) {\n                            console.log(data.error);\n                        }\n                    });\n            }\n        };\n    });\n","angular.module('dgmSurvey.services')\n    .factory('questionService', function ($http, $state) {\n        return {\n            getAllQuestions: function () {\n                return $http.get('/v1/question');\n            },\n            postQuestion: function (question) {\n                return $http.post('/v1/question', question)\n                    .success(function (data, headers) {\n                        if (data.success === true) {\n                            $state.go('tab.adminDashboard');\n                            console.log(data);\n                            console.log(headers);\n                        }\n                    })\n                    .error(function (data, headers) {\n                        if (data.success === false) {\n                            console.log(data.error);\n                        }\n                    });\n            },\n            getQuestionTypes: function () {\n                return $http.get('/v1/question/types');\n            },\n            deleteAQuestionMethod: function (id) {\n                return $http.delete('/v1/question/' + id)\n                    .success(function (data, headers) {\n                        if (data.success === true) {\n                            $state.go($state.current, {}, {\n                                reload: true\n                            });\n                        }\n                    })\n                    .error(function (data, headers) {\n                        if (data.success === false) {\n                            console.log(data.error);\n                        }\n                    });\n\n            },\n            getQuestionAnswers: function (id) {\n                return $http.get('/v1/question/' + id + '/answers');\n            }\n        };\n    });\n","/* global angular, FastClick */\nangular.module('fastclick', [])\n.config(function () {\n  if (!window.FastClick) { return; }\n  FastClick.attach(document.body);\n});\n","angular.module('user', [])\n.factory('user', function ($http) {\n  var baseUser = '/v1/user';\n  var baseAuth = '/v1/auth';\n\n  var roleData = $http.get(baseAuth + '/roles');\n\n  return {\n    create: function (data) {\n      var url = baseUser;\n      return $http.post(url, data);\n    },\n    read: function (id) {\n      var url = baseUser;\n      if (id) { url += '/' + id; }\n      return $http.get(url);\n    },\n    update: function (user) {\n      var url = baseUser + '/' + user.id;\n      return $http.put(url, user);\n    },\n    delete: function (id) {\n      var url = baseUser + '/' + id;\n      return $http.delete(url);\n    },\n    login: function (email, password) {\n      var url = baseAuth + '/login';\n      return $http.post(url, {\n        email: email,\n        password: password\n      });\n    },\n    logout: function () {\n      var url = baseAuth + '/logout';\n      return $http.post(url);\n    },\n    roles: roleData.then(function (data) {\n      return data.roles;\n    }),\n    accessLevels: roleData.then(function (data) {\n      return data.accessLevels;\n    })\n  };\n});\n","angular.module('d3', [])\n.factory('d3', function () {\n  return window.d3;\n})\n.directive('pieChart', function (d3, $window) {\n  return {\n    restrict: 'EA',\n    scope: {\n      values: '='\n    },\n    link: function (scope, elem, attrs) {\n      scope.$watch('values', function(values) {\n\t\t\t\tif (!values) { return; }\n\n        console.log(values);\n\n\t\t\t\tvar height = 300;\n\t\t\t\tvar radius = height / 2;\n\n\t\t\t\tvar color = d3.scale.category20();\n\n\t\t\t\tvar arc = d3.svg.arc()\n\t\t\t\t\t.outerRadius(radius - 10)\n\t\t\t\t\t.innerRadius(0);\n\n\t\t\t\tvar pie = d3.layout.pie()\n\t\t\t\t\t.sort(null)\n\t\t\t\t\t.value(function(d) {\n\t\t\t\t\t\treturn d.value;\n\t\t\t\t\t});\n\n\t\t\t\tvar svg = d3.select(elem[0]).append('svg')\n\t\t\t\t\t.attr('width', '100%')\n\t\t\t\t\t.attr('height', height)\n\t\t\t\t\t.append('g')\n\t\t\t\t\t.attr('transform', 'translate(' + radius + ',' + radius + ')');\n\n\t\t\t\tvalues.forEach(function(d) {\n\t\t\t\t\td.value = +d.value;\n\t\t\t\t});\n\n\t\t\t\tvar g = svg.selectAll('.arc')\n\t\t\t\t\t.data(pie(values))\n\t\t\t\t\t.enter().append('g')\n\t\t\t\t\t.attr('class', 'arc');\n\n\t\t\t\tg.append('path')\n\t\t\t\t\t.attr('d', arc)\n\t\t\t\t\t.style('fill', function(d, i) { return color(i); });\n\n\t\t\t\tg.append('text')\n\t\t\t\t\t.attr('transform', function(d) {\n            return 'translate(' + arc.centroid(d) + ')';\n          })\n\t\t\t\t\t.attr('dy', '.35em')\n\t\t\t\t\t.style('text-anchor', 'middle')\n\t\t\t\t\t.text(function(d) { return d.data.label; });\n\n\t\t\t}, true);\n    }\n  };\n});\n"],"sourceRoot":"/source/"}